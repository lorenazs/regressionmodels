set.seed(375)
paleta <- brewer.pal((frecPalabras+10)/(max(frecPalabras)+10),'BuGn')
wordcloud(words=names(frecPalabras),freq=frecPalabras,min.freq=3,random.order=F,colors=paleta)
library('RColorBrewer')
paginaWeb <- readLines("http://www.technologyreview.com/news/536336/inexpensive-electric-cars-may-arrive-sooner-than-you-think/")
length(paginaWeb)
texto <- paginaWeb[775:780]
textoSinHTML<- gsub(pattern='<p>', replacement= "",  x = texto, ignore.case = TRUE, perl = FALSE, fixed = FALSE, useBytes = FALSE)
textoSinHTML <- gsub(pattern='</p>', replacement= "",  x = textoSinHTML, ignore.case = TRUE, perl = FALSE, fixed = FALSE, useBytes = FALSE)
textoSinHTML  <- gsub(pattern='</section>', replacement= "",  x = textoSinHTML, ignore.case = TRUE, perl = FALSE, fixed = FALSE, useBytes = FALSE)
library(tm)
txt <- VectorSource(textoSinHTML)
txtCorpus <- Corpus(txt)
inspect(txtCorpus)
txtCorpus <- tm_map(txtCorpus,content_transformer(tolower))
txtCorpus <- tm_map(txtCorpus,removePunctuation)
txtCorpus <- tm_map(txtCorpus,removeNumbers)
for(i in 1:length(txtCorpus))
{
txtCorpus[[i]]<- removeWords(txtCorpus[[i]], stopwords('english'))
}
library("SnowballC")
txtCorpus <- tm_map(txtCorpus,stemDocument)
inspect(txtCorpus)
tdm <- TermDocumentMatrix(txtCorpus)
inspect(tdm)
findFreqTerms(x= tdm, lowfreq = 8,highfreq = Inf)
findAssocs(x=tdm, term='batteri', corlimit=0.6)
library(ggplot2)
library(wordcloud)
matriz <- as.matrix(tdm)
frecPalabras <- sort(rowSums(matriz),decreasing=TRUE)
set.seed(375)
paleta <- brewer.pal((frecPalabras+10)/(max(frecPalabras)+10),'BuGn')
#tonosGris <- gray((frecPalabras+8)/(max(frecPalabras)+8))
wordcloud(words=names(frecPalabras),freq=frecPalabras,min.freq=3,random.order=F,colors=paleta)
library('RColorBrewer')
paginaWeb <- readLines("http://www.technologyreview.com/news/536336/inexpensive-electric-cars-may-arrive-sooner-than-you-think/")
length(paginaWeb)
texto <- paginaWeb[775:780]
textoSinHTML<- gsub(pattern='<p>', replacement= "",  x = texto, ignore.case = TRUE, perl = FALSE, fixed = FALSE, useBytes = FALSE)
textoSinHTML <- gsub(pattern='</p>', replacement= "",  x = textoSinHTML, ignore.case = TRUE, perl = FALSE, fixed = FALSE, useBytes = FALSE)
textoSinHTML  <- gsub(pattern='</section>', replacement= "",  x = textoSinHTML, ignore.case = TRUE, perl = FALSE, fixed = FALSE, useBytes = FALSE)
library(tm)
txt <- VectorSource(textoSinHTML)
txtCorpus <- Corpus(txt)
inspect(txtCorpus)
txtCorpus <- tm_map(txtCorpus,content_transformer(tolower))
txtCorpus <- tm_map(txtCorpus,removePunctuation)
txtCorpus <- tm_map(txtCorpus,removeNumbers)
for(i in 1:length(txtCorpus))
{
txtCorpus[[i]]<- removeWords(txtCorpus[[i]], stopwords('english'))
}
library("SnowballC")
txtCorpus <- tm_map(txtCorpus,stemDocument)
inspect(txtCorpus)
tdm <- TermDocumentMatrix(txtCorpus)
inspect(tdm)
findFreqTerms(x= tdm, lowfreq = 8,highfreq = Inf)
findAssocs(x=tdm, term='batteri', corlimit=0.6)
library(ggplot2)
library(wordcloud)
matriz <- as.matrix(tdm)
frecPalabras <- sort(rowSums(matriz),decreasing=TRUE)
set.seed(375)
paleta <- brewer.pal((frecPalabras+10)/(max(frecPalabras)+10),'BuGn')
#tonosGris <- gray((frecPalabras+8)/(max(frecPalabras)+8))
wordcloud(words=names(frecPalabras),freq=frecPalabras,min.freq=3,random.order=F,colors=paleta)
library('tm')
library('SnowballC')
library('wordcloud')
library('RColorBrewer')
library('ggplot2')
paginaWeb <- readLines('http://www.gamespot.com/reviews/fallout-review/1900-2535953/')
length(paginaWeb)
texto <- paginaWeb[564]
texto
textoSinHTML<- gsub(pattern='<p style="">', replacement= "", x = texto,
ignore.case = TRUE, perl = FALSE, fixed = FALSE, useBytes = FALSE)
textoSinHTML <- gsub(pattern='</p>', replacement= "", x =
textoSinHTML, ignore.case = TRUE, perl = FALSE, fixed = FALSE, useBytes
= FALSE)
txt <- VectorSource(textoSinHTML)
txtCorpus <- Corpus(txt)
txtCorpus <- tm_map(txtCorpus,content_transformer(tolower))
txtCorpus <- tm_map(txtCorpus,removePunctuation)
txtCorpus <- tm_map(txtCorpus,removeNumbers)
for(i in 1:length(txtCorpus))
{
txtCorpus[[i]]<- removeWords(txtCorpus[[i]], stopwords('english'))
}
txtCorpus <- tm_map(txtCorpus,stemDocument)
tdm <- TermDocumentMatrix(txtCorpus)
findFreqTerms(x= tdm, lowfreq = 8,highfreq = Inf)
findAssocs(x=tdm, term='batteri', corlimit=0.6)
matriz <- as.matrix(tdm)
textoSinHTML
data()
data("Orange")
View(Orange)
head(Orange)
summary(Orange)
class(Orange)
Orange.age
Orange[0]
Orange
Orange.age
10 %% 5
10 %% 4
vec1 <- c(5,6,8,98,-4)
vec1
vec1[0]
vec1[1]
vec1[-2]
length(vec1)
seq(from=10, to = 1, by=2)
seq(from=20, to=38,by=2)
seq(from=10, to = 1, by=-2)
vec1
any(vec1 %% 2 == 0)
all(vec1 %% 2 == 0)
pares = vec1[vec1 %% 2 ==0]
pares
impares = vec1[vec1 %% != 0]
impares = vec1[vec1 %% <> 0]
impares = vec1[vec1 %% 2  != 0]
impares
pares
vec1
datos1=c(10,3,4,5,30)
datos1
paresd <- datos1[datos1 %% 2 == 0]
paresd
datos1[datos1 %% 2 != 0]
datos1[ datos1 > 5]
datos1
datos1
x = datos1[datos1 > 10]
x
y = datos1[datos1 <= 10]
y
Orange$Tree
Orange$age
persona = lis(nombre= 'ana', ingreso=1999, lugar='sj')
persona = list(nombre= 'ana', ingreso=1999, lugar='sj')
persona
persona['nombres']
persona['nombre']
persona[['nombre']]
personas <- c('ignacio','lorena','helena','fabrizzio')
lugares <- c('sj','sj','sj','it')
datos <- data.frame (personas, lugares)
datos
datos$lugares
datos$personas
datos[1]
datos[2]
library()
install.packages(xlsx)
install.packages('xlsx')
edades<-c(10,2,3,4)
datos
rbind(datos,edades)
datos
datos <- cbind(datos,edades)
datos
datos <- rbind(datos, c('juan','fr',7))
datos <- rbind(datos, list('juan','fr',7))
datos <- rbind(datos, list(personas='juan',lugares='fr',edades=7))
datos
length(datos)
datos <- datos[-5]
datos
datos <- datos[-5,]
datos
datos <- datos[-6,]
datos
datos <- datos[-6,]
datos
datos <- datos[-6,]
datos
datos<- datos[-6,]
datos
ls()
library("xlsx")
library(ggplot2)
library(RColorBrewer)
library("lattice")
clear()
?par
par?
?par
organismo <- c('moscaDeLaFruta','Humano','Perro','Raton')
cromosomas <- c(8,46,78,40)
genes <- c(13600,21000,25000,23000)
poblacion <- data.frame(organismo,cromosomas,genes,stringsAsFactors = FALSE)
poblacion
plot(poblacion$cromosomas,poblacion$genes,type='b')
rainbow(4)
?par
?plot
data()
str(diamonds)
estado<- c('Mejorado','Critico','Critico','Excelente','Mejorado','Mejorado')
factEstado <- factor(estado)
factEstado
tabla <- table(factEstado)
tabla
tabla2<-table(factor(c('Mejorado','Critico','Critico','Excelente','Mejorado','Mejorado')))
tabla2
poblacion
library()
write.table(poblacion,file='poblacion.csv')
getwd()
write.table(poblacion,file='poblacion.xlsx')
3/0
is.na(100)
poblacion
poblacion$cromosomas[poblacion$cromosomas == 78] <- NA
poblacion
ifelse(10>4,5,2)
a=100
b=200
ifelse(a < b,500,1000)
ifelse(a > b,500,1000)
ifelse(is.na(poblacion$cromosomas),78,poblacion$cromosomas)
poblacion
pobl2<- na.omit(poblacion)
poblacion
pobl2
complete.cases(poblacion)
pob3<- poblacion[complete.cases(poblacion),]
pob3
mean(c(100,200,NA,300,200,NA))
mean(c(100,200,NA,300,200,NA),na.rm=TRUE)
poblacion
pobl2
na.omit(poblacion)
poblacion[order(poblacion$cromosomas),]
poblacion
poblacion[order(poblacion$genes),]
poblacion[order(poblacion$organismo),]
poblacion[order(,poblacion$organismo)]
poblacion[,order(poblacion$organismo)]
poblacion$genes
View(poblacion)
poblacion
poblacion[,c(2:3)]
poblacion[c(2:3),]
poblacion[c(2:4),]
poblacion
poblacion[poblacion$genes>=24000,]
poblacion[poblacion$genes < 24000,]
poblacion[poblacion$cromosomas >40 & poblacion$genes >22000,]
poblacion
poblacion[poblacion$cromosomas >=40 & poblacion$genes >22000,]
poblacion[poblacion$cromosomas >40 | poblacion$genes >22000,]
c(1:85)
muestra <- sample(c(1:85),20,replace = FALSE)
muestra
?par
rainbow(5)
nombresCol = rainbow(5)
nombresCol
pie(5,nombresCol,col=rainbow(5))
pie(c(1:5),nombresCol,col=rainbow(5))
datos <- rnorm(100)
datos
data()
str(airquality)
datos<- na.omit(airquality)
View(datos)
rangos <- equal.count(datos$Temp,4)
View(rangos)
library("lattice")
xyplot(datos$Ozone ~ datos$Solar.R | rangos, data=datos)
rangosViento<-equal.count(datos$Wind,4)
xyplot(datos$Ozone ~ datos$Solar.R | rangos * rangosViento, data=datos)
xyplot(datos$Ozone ~ datos$Solar.R | rangos * rangosViento, data=datos,as.table=TRUE)
View(ddiamonds)
View(diamonds)
library(ggplot2)
qplot(cut,data=diamonds,geom='bar')
qplot(price,data = diamonds,geom ='histogram',bin=1000,main='ejemplo histograma con ggplot2')
qplot(price,data = diamonds,geom ='histogram',bin=800,main='ejemplo histograma con ggplot2')
qplot(carat,depth, data=diamonds)
qplot(depth,carat, data=diamonds)
qplot(depth,carat, data=diamonds,colour=color)
qplot(depth,carat, data=diamonds,colour=cut)
qplot(depth,carat, data=diamonds,shape=cut)
qplot(clarity,data=diamonds,geom='bar',fill=cut
)
qplot(clarity,data=diamonds,geom='bar',fill=color)
qplot(clarity,data=diamonds,geom='bar',fill=cut)
qplot(clarity,data=diamonds,geom='bar',fill=cut,position='dodge')
qplot(carat,price, data=diamonds)
qplot(carat,price, data=diamonds, facets=.~color)
qplot(carat,price, data=diamonds, facets=.~cut)
qplot(carat,price, data=diamonds, facets= cut ~.)
qplot(carat,data=diamons, facets=~.clarity,geom='histogram',xlim(0,3),fill=color)
qplot(carat,data=diamonds, facets=~.clarity,geom='histogram',xlim(0,3),fill=color)
qplot(carat,data=diamonds, facets=clarity.~,geom='histogram',xlim(0,3),fill=color)
qplot(carat,data=diamonds, facets=clarity~.,geom='histogram',xlim(0,3),fill=color)
qplot(carat,data=diamonds, facets=clarity~.,geom='histogram',xlim(0,10),fill=color)
qplot(carat,data=diamonds, facets=clarity~.,geom='histogram',xlim(0,10),fill=color)
qplot(carat,data=diamonds, facets=clarity~.,geom='histogram',binwidth=0.1,xlim(0,3),fill=color)
qplot(carat,data=diamonds, facets=clarity~.,geom='histogram',binwidth=0.1,xlim(0,3),fill=color)
qplot(carat,data=diamonds, facets=clarity~.,geom='histogram',binwidth=0.1,xlim=c(0,3),fill=color)
View(AirPassengers)
str(AirPassengers)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
coef(lm(y~x))[2]
data(mtcars)
coef(lm(mtcars$mpg ~ mtcars$wt))[2]
x
coef(lm(x~y))
coef(lm(y~x))
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
mean(x)
8.58-9.31
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
length(x)
for i in 1:length(x)
for (i in 1:length(w)){}
for (i in 1:length(w)){
w[i]}
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
for (i in 1:length(w)){
w[i]}
z <- c()
z
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
for (i in 1:length(w))
{
suma =0
for(j in 1:length(x))
{
suma= suma + w[i] * (x[i] - 1.007)^2
}
suma
{
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
for (i in 1:length(w))
{
suma =0
for(j in 1:length(x))
{
suma= suma + w[i] * (x[i] - 1.007)^2
}
suma
}
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
for (i in 1:length(w))
{
suma =0
for(j in 1:length(x))
{
suma= suma + w[i] * (x[i] - 1.007)^2
}
print(suma)
}
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
suma =0
for(j in 1:length(x))
{
suma= suma + w[i] * (x[i] - 1.007)^2
print(suma)
}
source('~/Desktop/quiz.R')
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
suma =0
for(j in 1:length(x))
{
suma= suma + w[i] * (x[i] - 1.007)^2
}
print(suma)
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
suma =0
for(j in 1:length(x))
{
suma= suma + w[i] * (x[i] - 0.1471)^2
}
print(suma)
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
suma =0
for(j in 1:length(x))
{
suma= suma + w[i] * (x[i] - 0.300)^2
}
print(suma)
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
suma =0
for(j in 1:length(x))
{
suma= suma + w[i] * (x[i] - 0.0025)^2
}
print(suma)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
coef(lm(y ~x))[2]
data("mtcars")
coef(lm(mtcars$mpg ~ mtcars$wt))[2]
str(mtcars)
head(mtcars)
summary(mtcars)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
coef(lm(y ~x))
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
w <- c(0.573,0.8,0.36.0.44)
suma =0
for(j in 1:length(x))
{
suma= suma + w[i] * (x[i] - x[i])^2
}
print(suma)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
x2 <- c(x-mean(x)/sd(x))
x2
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
x2<-(x-mean(x))/sd(x)
x2
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
(x-mean(x))/sd(x)
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
suma =0
for(j in 1:length(x))
{
suma= suma + w[i] * (x[i] - 1.077)^2
}
print(suma)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
coef(lm(y ~x))
0.4*1.5
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
fit <- lm(y ~ x)
summary(fit)$coefficients
fit$df.residual
fit$residuals
fit$coefficients[2][1]
resid(fit$coefficients[2][2])
summary(fit)$sigma
summary(fit)
mtcars
x <- mtcars$wt
y <- mtcars$mpg
fit <- lm(y ~ x)
sumCoef <- summary(fit)$coefficients
sumCoef[1,1] + c(-1,1) * qt(.975,df=fit$df) * sumCoef[1,2]
sumCoef[2,1] + c(-1,1) * qt(.975,df=fit$df) * sumCoef[2,2]
fit <- lm(y ~ x)
summary(fit)
nuevopeso<-data.frame(wt=c(3000/1000))
predict(fit,nuevopeso,interval='prediction')
predict(fit,nuevopeso,interval='confidence')
fit<-lm(mpg ~wt,data=mtcars)
summary(fit)
predict(fit,nuevopeso,interval='prediction')
nuevopeso<-data.frame(wt=c(2000/1000))
predict(fit,nuevopeso,interval='confidence')
setwd("~/Documents/RegressionModels/Project")
getwd()
data(mtcars)
str(mtrcars)
str(mtcars)
mtcars$am
count(mtcars[mtcars$am==1])
f <- as.factor(mtcars$am)
f
aggregate(f)
aggregate(f,sum)
sum(mtcars$am==1)
sum(mtcars$am==0)
13+19
auto <- mtcars[mtcars$am==0]
auto <- mtcars[mtcars$am==0,]
manu <- mtcars[mtcars$am==1]
manu <- mtcars[mtcars$am==1,1]
manu <- mtcars[mtcars$am==1,]
auto
mean(auto$mpg)
mean(manual$mpg)
mean(manu$mpg)
boxplot(auto)
boxplot(auto$mpg)
boxplot(manu$mpg)
par(mfrow=c(1,2))
boxplot(auto$mpg)
boxplot(manu$mpg)
str(mtcars)
mtcars[1,]
cor(mtcars)[1,]
multiModel <- lm(mpg ~ am + hp + wt, data=mtcars)
plot(multiModel)
par(mfrows=c(2,2))
par(mfrow=c(2,2))
plot(multiModel)
